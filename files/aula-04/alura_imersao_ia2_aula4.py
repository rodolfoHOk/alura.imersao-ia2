# -*- coding: utf-8 -*-
"""alura_imersao_ia2_aula4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UdDghuWq1EGAK9bG1Nu-gHpmxISBDQ-u

# Aula 4: Criando seu próprio chatbot com a Gemini API no Google Colab

### Instalando o SDK do Google Generative AI
"""

!pip install -q -U google-generativeai

"""### Importando o SDK do Google Generative AI e setando a API Key"""

# Import the Python SDK
import google.generativeai as genai
# Used to securely store your API key
from google.colab import userdata

GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

"""### Listar os modelos disponíveis"""

for m in genai.list_models():
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

"""### Configurações do modelo"""

model_name = "gemini-1.0-pro"

generation_config = {
  "candidate_count": 1,
  "temperature": 0.5,
}

safety_settings = {
    'HATE': 'BLOCK_NONE',
    'HARASSMENT': 'BLOCK_NONE',
    'SEXUAL' : 'BLOCK_NONE',
    'DANGEROUS' : 'BLOCK_NONE'
}

"""### Inicializando o modelo"""

model = genai.GenerativeModel(
    model_name=model_name,
    generation_config=generation_config,
    safety_settings=safety_settings)

"""### Testando se está funcionando até aqui"""

response = model.generate_content("Quem descobriu o Brasil?")
print(response.text)

"""Resultado:

Pedro Álvares Cabral

### Inicializando o chat
"""

chat = model.start_chat(history=[])

"""### Criando a interface"""

prompt = input('Esperando prompt: ')

while prompt != "fim":
  response = chat.send_message(prompt)
  print("Resposta:", response.text, '\n')
  prompt = input('Esperando prompt: ')

"""Resultado:

Esperando prompt: Qual é a capital do Japão?

Resposta: Tóquio


Esperando prompt: Qual é a comida típica desse país?

Resposta: Sushi


Esperando prompt: Meu primo nasceu nesta cidade. Qual é a nacionalidade dele?

Resposta: Japonesa


Esperando prompt: Qual é a população desta cidade?

Resposta: Tóquio (cerca de 13,96 milhões de habitantes)


Esperando prompt: fim

### Melhorando a visualização
"""

#Melhorando a visualização

#Código disponível em https://ai.google.dev/tutorials/python_quickstart#import_packages

import textwrap
from IPython.display import display
from IPython.display import Markdown

def to_markdown(text):
  text = text.replace('•', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

#Imprimindo o histórico

for message in chat.history:
  display(to_markdown(f'**{message.role}**: {message.parts[0].text}'))
  print('-------------------------------------------')

"""Resultado:

  **user:** Qual é a capital do Japão?

-------------------------------------------
  **model:** Tóquio

-------------------------------------------
  **user:** Qual é a comida típica desse país?

-------------------------------------------
  **model:** Sushi

-------------------------------------------
  **user:** Meu primo nasceu nesta cidade. Qual é a nacionalidade dele?

-------------------------------------------
  **model:** Japonesa

-------------------------------------------
  **user:** Qual é a população desta cidade?

-------------------------------------------
  **model:** Tóquio (cerca de 13,96 milhões de habitantes)

-------------------------------------------
"""